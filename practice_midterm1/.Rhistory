knitr::opts_chunk$set(echo = TRUE)
getwd()
library("tidyverse")
x <- 42 # the object 'x' 'gets' 42
my_numeric <- 2
class(my_numeric) # To find the class of data
is.integer(my_numeric) #is my_numeric an integer?
my_integer <- as.integer(my_numeric) #create new object specified as an integer
my_missing <- NA
is.na(my_missing) # Asks if my_missing is NA
anyNA(my_missing) # Asks if theres any NA
new_vector <- c(10, 20, 30, NA)
mean(new_vector, na.rm=T) #removes the NA  in the vector. T = true, so it would be removed.
my_vector <- c(10, 20, 30) # numeric vector
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thrusday", "Friday", "Saturday", "Sunday") # character vector
my_vector_sequence <- c(1:100) # generate sequence of numbers
my_vector_sequence
my_vector_sequence[15] # Evalulate numeric in vector
Philosophers_Stone <- c(317.5, 657.1) # seperate vectors
Chamber_of_Secrets <- c(261.9, 616.9)
Prisoner_of_Azkaban <- c(249.5, 547.1)
Goblet_of_Fire <- c(290.0, 606.8)
Order_of_the_Phoenix <- c(292.0, 647.8)
Half_Blood_Prince <- c(301.9, 632.4)
Deathly_Hallows_1 <- c(295.9, 664.3)
Deathly_Hallows_2 <- c(381.0, 960.5)
box_office <- c(Philosophers_Stone, Chamber_of_Secrets, Prisoner_of_Azkaban, Goblet_of_Fire, Order_of_the_Phoenix, Half_Blood_Prince, Deathly_Hallows_1, Deathly_Hallows_2)
box_office # New object called box_office
harry_potter_matrix <- matrix(box_office, nrow = 8, byrow = T)
harry_potter_matrix # Creates a matrix
region <- c("US", "non-US")
region
titles <- c("Philosophers_Stone", "Chamber_of_Secrets", "Prisoner_of_Azkaban", "Goblet_of_Fire", "Order_of_the_Phoenix", "Half_Blood_Prince", "Deathly_Hallows_1", "Deathly_Hallows_2")
titles
colnames(harry_potter_matrix) <- region # name column with vector 'region'
rownames(harry_potter_matrix) <- titles # name rows with vector 'title'
harry_potter_matrix # print matrix
global <- rowSums(harry_potter_matrix) # calculate total earnings
global
all_harry_potter_matrix <- cbind(harry_potter_matrix, global)
all_harry_potter_matrix # Add new columns
harry_potter_matrix[2,1] # selects the value in the first column, second row.
harry_potter_matrix[1:4] #`:` selects the specified elements in a column.
non_us_earnings <- all_harry_potter_matrix[ ,2] #select values in an entire row or column, calculate mean of entire second column
mean(non_us_earnings)
Sex <- c("male", "female", "male") # Build seperate vectors
Length <- c(3.2, 3.7, 3.4)
Weight <- c(2.9, 4.0, 3.1)
hbirds <- data.frame(Sex, Length, Weight) # Combine vectors to create data frame
hbirds
names(hbirds) # Column names of data frame
dim(hbirds) # Dimensions of hbirds
str(hbirds) # Dimensions of hbirds
hbirds <- data.frame(sex=Sex, length=Length, weight_g=Weight)
hbirds # Change names from uppercase to lowercase, When you say hbird gets data.frame, it overwrites everything
hbirds[1,] # select first row
hbirds[ ,3] # select third column
mean(hbirds$weight_g) # select values in entire column using '$', useful for calculating means
new_bird <- c("female", 3.6, 3.9)
new_bird
hbirds<- rbind(hbirds, new_bird) # Add a new bird's data with 'rbind()' meaning row bind
hbirds
hbirds$neighborhood <- c("lakewood", "brentwood", "lakewood", "scenic Heights")
hbirds # Add column into our data with '$'
write.csv(hbirds, "hbirds_data.csv", row.names = FALSE)
library("tidyverse")
getwd()
hot_springs <- read_csv("lab3/hsprings_data.csv")
setwd(/Users/jasminehsiao/Desktop/BIS15W2024_jhsiao/)
setwd("/Users/jasminehsiao/Desktop/BIS15W2024_jhsiao/"")
hot_springs <- read_csv("lab3/hsprings_data.csv")
setwd("/Users/jasminehsiao/Desktop/BIS15W2024_jhsiao/")
hot_springs <- read_csv("lab3/hsprings_data.csv")
getwd()
setwd("/Users/jasminehsiao/Desktop/BIS15W2024_jhsiao/")
hot_springs <- read_csv("lab3/hsprings_data.csv")
knitr::opts_chunk$set(echo = TRUE)
getwd()
library("tidyverse")
x <- 42 # the object 'x' 'gets' 42
my_numeric <- 2
class(my_numeric) # To find the class of data
is.integer(my_numeric) #is my_numeric an integer?
my_integer <- as.integer(my_numeric) #create new object specified as an integer
my_missing <- NA
is.na(my_missing) # Asks if my_missing is NA
anyNA(my_missing) # Asks if theres any NA
new_vector <- c(10, 20, 30, NA)
mean(new_vector, na.rm=T) #removes the NA  in the vector. T = true, so it would be removed.
my_vector <- c(10, 20, 30) # numeric vector
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thrusday", "Friday", "Saturday", "Sunday") # character vector
my_vector_sequence <- c(1:100) # generate sequence of numbers
my_vector_sequence
my_vector_sequence[15] # Evalulate numeric in vector
Philosophers_Stone <- c(317.5, 657.1) # seperate vectors
Chamber_of_Secrets <- c(261.9, 616.9)
Prisoner_of_Azkaban <- c(249.5, 547.1)
Goblet_of_Fire <- c(290.0, 606.8)
Order_of_the_Phoenix <- c(292.0, 647.8)
Half_Blood_Prince <- c(301.9, 632.4)
Deathly_Hallows_1 <- c(295.9, 664.3)
Deathly_Hallows_2 <- c(381.0, 960.5)
box_office <- c(Philosophers_Stone, Chamber_of_Secrets, Prisoner_of_Azkaban, Goblet_of_Fire, Order_of_the_Phoenix, Half_Blood_Prince, Deathly_Hallows_1, Deathly_Hallows_2)
box_office # New object called box_office
harry_potter_matrix <- matrix(box_office, nrow = 8, byrow = T)
harry_potter_matrix # Creates a matrix
region <- c("US", "non-US")
region
titles <- c("Philosophers_Stone", "Chamber_of_Secrets", "Prisoner_of_Azkaban", "Goblet_of_Fire", "Order_of_the_Phoenix", "Half_Blood_Prince", "Deathly_Hallows_1", "Deathly_Hallows_2")
titles
colnames(harry_potter_matrix) <- region # name column with vector 'region'
rownames(harry_potter_matrix) <- titles # name rows with vector 'title'
harry_potter_matrix # print matrix
global <- rowSums(harry_potter_matrix) # calculate total earnings
global
all_harry_potter_matrix <- cbind(harry_potter_matrix, global)
all_harry_potter_matrix # Add new columns
harry_potter_matrix[2,1] # selects the value in the first column, second row.
harry_potter_matrix[1:4] #`:` selects the specified elements in a column.
non_us_earnings <- all_harry_potter_matrix[ ,2] #select values in an entire row or column, calculate mean of entire second column
mean(non_us_earnings)
Sex <- c("male", "female", "male") # Build seperate vectors
Length <- c(3.2, 3.7, 3.4)
Weight <- c(2.9, 4.0, 3.1)
hbirds <- data.frame(Sex, Length, Weight) # Combine vectors to create data frame
hbirds
names(hbirds) # Column names of data frame
dim(hbirds) # Dimensions of hbirds
str(hbirds) # Dimensions of hbirds
hbirds <- data.frame(sex=Sex, length=Length, weight_g=Weight)
hbirds # Change names from uppercase to lowercase, When you say hbird gets data.frame, it overwrites everything
hbirds[1,] # select first row
hbirds[ ,3] # select third column
mean(hbirds$weight_g) # select values in entire column using '$', useful for calculating means
new_bird <- c("female", 3.6, 3.9)
new_bird
hbirds<- rbind(hbirds, new_bird) # Add a new bird's data with 'rbind()' meaning row bind
hbirds
hbirds$neighborhood <- c("lakewood", "brentwood", "lakewood", "scenic Heights")
hbirds # Add column into our data with '$'
write.csv(hbirds, "hbirds_data.csv", row.names = FALSE)
library("tidyverse")
getwd()
setwd("/Users/jasminehsiao/Desktop/BIS15W2024_jhsiao/")
str(hot_springs) # Get an idea of data structure
class(hot_springs$scientist)
class(hot_springs$spring) # shows the classes of both
hot_springs$scientist <- as.factor(hot_springs$scientist)
hot_springs$spring <- as.factor(hot_springs$spring) # Makes both factors
levels(hot_springs$scientist)
levels(hot_springs$spring) # Shows levels of the factors
fish <- read_csv("lab3/data/Gaeta_etal_CLC_data.csv")
hot_springs <- read_csv("lab3/hsprings_data.csv")
setwd("/Users/jasminehsiao/Desktop/BIS15W2024_jhsiao/")
hot_springs <- read_csv("lab3/hsprings_data.csv")
setwd("/BIS15W2024_jhsiao/")
setwd("BIS15W2024_jhsiao/")
setwd("BIS15W2024_jhsiao")
hot_springs <- read_csv("hsprings_data.csv")
hot_springs <- read_csv("data_midterm1/hsprings_data.csv")
fish <- read_csv("data_midterm1/Gaeta_etal_CLC_data.csv")
knitr::opts_chunk$set(echo = TRUE)
getwd()
library("tidyverse")
x <- 42 # the object 'x' 'gets' 42
my_numeric <- 2
class(my_numeric) # To find the class of data
is.integer(my_numeric) #is my_numeric an integer?
my_integer <- as.integer(my_numeric) #create new object specified as an integer
my_missing <- NA
is.na(my_missing) # Asks if my_missing is NA
anyNA(my_missing) # Asks if theres any NA
new_vector <- c(10, 20, 30, NA)
mean(new_vector, na.rm=T) #removes the NA  in the vector. T = true, so it would be removed.
my_vector <- c(10, 20, 30) # numeric vector
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thrusday", "Friday", "Saturday", "Sunday") # character vector
my_vector_sequence <- c(1:100) # generate sequence of numbers
my_vector_sequence
my_vector_sequence[15] # Evalulate numeric in vector
Philosophers_Stone <- c(317.5, 657.1) # seperate vectors
Chamber_of_Secrets <- c(261.9, 616.9)
Prisoner_of_Azkaban <- c(249.5, 547.1)
Goblet_of_Fire <- c(290.0, 606.8)
Order_of_the_Phoenix <- c(292.0, 647.8)
Half_Blood_Prince <- c(301.9, 632.4)
Deathly_Hallows_1 <- c(295.9, 664.3)
Deathly_Hallows_2 <- c(381.0, 960.5)
box_office <- c(Philosophers_Stone, Chamber_of_Secrets, Prisoner_of_Azkaban, Goblet_of_Fire, Order_of_the_Phoenix, Half_Blood_Prince, Deathly_Hallows_1, Deathly_Hallows_2)
box_office # New object called box_office
harry_potter_matrix <- matrix(box_office, nrow = 8, byrow = T)
harry_potter_matrix # Creates a matrix
region <- c("US", "non-US")
region
titles <- c("Philosophers_Stone", "Chamber_of_Secrets", "Prisoner_of_Azkaban", "Goblet_of_Fire", "Order_of_the_Phoenix", "Half_Blood_Prince", "Deathly_Hallows_1", "Deathly_Hallows_2")
titles
colnames(harry_potter_matrix) <- region # name column with vector 'region'
rownames(harry_potter_matrix) <- titles # name rows with vector 'title'
harry_potter_matrix # print matrix
global <- rowSums(harry_potter_matrix) # calculate total earnings
global
all_harry_potter_matrix <- cbind(harry_potter_matrix, global)
all_harry_potter_matrix # Add new columns
harry_potter_matrix[2,1] # selects the value in the first column, second row.
harry_potter_matrix[1:4] #`:` selects the specified elements in a column.
non_us_earnings <- all_harry_potter_matrix[ ,2] #select values in an entire row or column, calculate mean of entire second column
mean(non_us_earnings)
Sex <- c("male", "female", "male") # Build seperate vectors
Length <- c(3.2, 3.7, 3.4)
Weight <- c(2.9, 4.0, 3.1)
hbirds <- data.frame(Sex, Length, Weight) # Combine vectors to create data frame
hbirds
names(hbirds) # Column names of data frame
dim(hbirds) # Dimensions of hbirds
str(hbirds) # Dimensions of hbirds
hbirds <- data.frame(sex=Sex, length=Length, weight_g=Weight)
hbirds # Change names from uppercase to lowercase, When you say hbird gets data.frame, it overwrites everything
hbirds[1,] # select first row
hbirds[ ,3] # select third column
mean(hbirds$weight_g) # select values in entire column using '$', useful for calculating means
new_bird <- c("female", 3.6, 3.9)
new_bird
hbirds<- rbind(hbirds, new_bird) # Add a new bird's data with 'rbind()' meaning row bind
hbirds
hbirds$neighborhood <- c("lakewood", "brentwood", "lakewood", "scenic Heights")
hbirds # Add column into our data with '$'
write.csv(hbirds, "hbirds_data.csv", row.names = FALSE)
library("tidyverse")
getwd()
hot_springs <- read_csv("data_midterm1/hsprings_data.csv")
str(hot_springs) # Get an idea of data structure
class(hot_springs$scientist)
class(hot_springs$spring) # shows the classes of both
hot_springs$scientist <- as.factor(hot_springs$scientist)
hot_springs$spring <- as.factor(hot_springs$spring) # Makes both factors
levels(hot_springs$scientist)
levels(hot_springs$spring) # Shows levels of the factors
fish <- read_csv("data_midterm1/Gaeta_etal_CLC_data.csv")
summary(fish) # summarize data frame
glimpse(fish) # Another summary function
nrow(fish) # Gives number of rows
ncol(fish) # Gives number of columns
dim(fish) # Gives dimensions
names(fish) #Gives column names
head(fish) # Prints the first n rows of the data frame
tail(fish) # Prints the last n rows of the data frame
table(fish$lakeid) # Useful when have limited num of categorical variables, produces fast counts of number of observations in a variable
# View(fish)
# click on the `fish` data frame in the Environment tab or type this
little_fish <- filter(fish, length<=100)
little_fish # Filter allows us to pull out observations with specific criteria
library("tidyverse")
fish <- readr::read_csv("lab4/data/Gaeta_etal_CLC_data.csv") ##readr is just being explicit on the package used
fish <- readr::read_csv("data_midterm1/Gaeta_etal_CLC_data.csv") ##readr is just being explicit on the package used
knitr::opts_chunk$set(echo = TRUE)
getwd()
library("tidyverse")
x <- 42 # the object 'x' 'gets' 42
my_numeric <- 2
class(my_numeric) # To find the class of data
is.integer(my_numeric) #is my_numeric an integer?
my_integer <- as.integer(my_numeric) #create new object specified as an integer
my_missing <- NA
is.na(my_missing) # Asks if my_missing is NA
anyNA(my_missing) # Asks if theres any NA
new_vector <- c(10, 20, 30, NA)
mean(new_vector, na.rm=T) #removes the NA  in the vector. T = true, so it would be removed.
my_vector <- c(10, 20, 30) # numeric vector
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thrusday", "Friday", "Saturday", "Sunday") # character vector
my_vector_sequence <- c(1:100) # generate sequence of numbers
my_vector_sequence
my_vector_sequence[15] # Evalulate numeric in vector
Philosophers_Stone <- c(317.5, 657.1) # seperate vectors
Chamber_of_Secrets <- c(261.9, 616.9)
Prisoner_of_Azkaban <- c(249.5, 547.1)
Goblet_of_Fire <- c(290.0, 606.8)
Order_of_the_Phoenix <- c(292.0, 647.8)
Half_Blood_Prince <- c(301.9, 632.4)
Deathly_Hallows_1 <- c(295.9, 664.3)
Deathly_Hallows_2 <- c(381.0, 960.5)
box_office <- c(Philosophers_Stone, Chamber_of_Secrets, Prisoner_of_Azkaban, Goblet_of_Fire, Order_of_the_Phoenix, Half_Blood_Prince, Deathly_Hallows_1, Deathly_Hallows_2)
box_office # New object called box_office
harry_potter_matrix <- matrix(box_office, nrow = 8, byrow = T)
harry_potter_matrix # Creates a matrix
region <- c("US", "non-US")
region
titles <- c("Philosophers_Stone", "Chamber_of_Secrets", "Prisoner_of_Azkaban", "Goblet_of_Fire", "Order_of_the_Phoenix", "Half_Blood_Prince", "Deathly_Hallows_1", "Deathly_Hallows_2")
titles
colnames(harry_potter_matrix) <- region # name column with vector 'region'
rownames(harry_potter_matrix) <- titles # name rows with vector 'title'
harry_potter_matrix # print matrix
global <- rowSums(harry_potter_matrix) # calculate total earnings
global
all_harry_potter_matrix <- cbind(harry_potter_matrix, global)
all_harry_potter_matrix # Add new columns
harry_potter_matrix[2,1] # selects the value in the first column, second row.
harry_potter_matrix[1:4] #`:` selects the specified elements in a column.
non_us_earnings <- all_harry_potter_matrix[ ,2] #select values in an entire row or column, calculate mean of entire second column
mean(non_us_earnings)
Sex <- c("male", "female", "male") # Build seperate vectors
Length <- c(3.2, 3.7, 3.4)
Weight <- c(2.9, 4.0, 3.1)
hbirds <- data.frame(Sex, Length, Weight) # Combine vectors to create data frame
hbirds
names(hbirds) # Column names of data frame
dim(hbirds) # Dimensions of hbirds
str(hbirds) # Dimensions of hbirds
hbirds <- data.frame(sex=Sex, length=Length, weight_g=Weight)
hbirds # Change names from uppercase to lowercase, When you say hbird gets data.frame, it overwrites everything
hbirds[1,] # select first row
hbirds[ ,3] # select third column
mean(hbirds$weight_g) # select values in entire column using '$', useful for calculating means
new_bird <- c("female", 3.6, 3.9)
new_bird
hbirds<- rbind(hbirds, new_bird) # Add a new bird's data with 'rbind()' meaning row bind
hbirds
hbirds$neighborhood <- c("lakewood", "brentwood", "lakewood", "scenic Heights")
hbirds # Add column into our data with '$'
write.csv(hbirds, "hbirds_data.csv", row.names = FALSE)
library("tidyverse")
getwd()
hot_springs <- read_csv("data_midterm1/hsprings_data.csv")
str(hot_springs) # Get an idea of data structure
class(hot_springs$scientist)
class(hot_springs$spring) # shows the classes of both
hot_springs$scientist <- as.factor(hot_springs$scientist)
hot_springs$spring <- as.factor(hot_springs$spring) # Makes both factors
levels(hot_springs$scientist)
levels(hot_springs$spring) # Shows levels of the factors
fish <- read_csv("data_midterm1/Gaeta_etal_CLC_data.csv")
summary(fish) # summarize data frame
glimpse(fish) # Another summary function
nrow(fish) # Gives number of rows
ncol(fish) # Gives number of columns
dim(fish) # Gives dimensions
names(fish) #Gives column names
head(fish) # Prints the first n rows of the data frame
tail(fish) # Prints the last n rows of the data frame
table(fish$lakeid) # Useful when have limited num of categorical variables, produces fast counts of number of observations in a variable
# View(fish)
# click on the `fish` data frame in the Environment tab or type this
little_fish <- filter(fish, length<=100)
little_fish # Filter allows us to pull out observations with specific criteria
library("tidyverse")
fish <- readr::read_csv("data_midterm1/Gaeta_etal_CLC_data.csv") ##readr is just being explicit on the package used
glimpse(fish) # structure
summary(fish) # contents
dim(fish) # Dimensions
names(fish)
select(fish, "lakeid", "scalelength") # Pull out column of interest, order matters
select(fish, fish_id:length) #gives the columns in between, range of columns
select(fish, -"fish_id", -"annnumber", -"length", -"radii_length_mm") # Columns except those (-)
select(fish, contains("length")) #pull out all data with length
select(fish, starts_with("radii")) #pull out all variable starts with
select(fish, ends_with("id"))
mammals %>%
select(genus, species, newborn) %>%
mutate(newborn_new = ifelse(newborn == -999.00, NA, newborn))%>%
arrange(newborn)
setwd("~/Desktop/BIS15W2024_jhsiao/practice_midterm1")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
elephants <- readr::read_csv(file="data/ElephantsMF.csv")
glimpse(elephants)
elephants <- janitor::clean_names(elephants)
elephants$sex <- as.factor(elephants$sex)
elephants %>%
count(sex)
elephants %>%
summarize(mean_age=mean(age))
elephants %>%
group_by(sex) %>%
summarise(mean_age=mean(age),
mean_height=mean(height))
elephants %>%
filter(age>20) %>%
group_by(sex) %>%
summarise(min_height=min(height),
max_height=max(height),
mean_height=mean(height),
n_elephants=n())
gabon <- readr::read_csv("data/IvindoData_DryadVersion.csv")
gabon <- gabon %>%
mutate_if(is.character, factor)
gabon %>%
group_by(HuntCat) %>%
summarise(mean_bird_diversity=mean(Diversity_BirdSpecies),
mean_mammal_diversity=mean(Diversity_MammalSpecies),
nsamples=n())
gabon %>%
filter(HuntCat=="High") %>%
summarise(mean_bird_diversity=mean(Diversity_BirdSpecies),
mean_mammal_diversity=mean(Diversity_MammalSpecies),
nsamples=n())
gabon %>%
filter(HuntCat=="Moderate") %>%
summarise(mean_bird_diversity=mean(Diversity_BirdSpecies),
mean_mammal_diversity=mean(Diversity_MammalSpecies),
nsamples=n())
names(gabon)
gabon %>%
filter(Distance<3) %>%
summarise(across(contains("RA_"), mean))
gabon %>%
filter(Distance>25) %>%
summarise(across(contains("RA_"), mean))
