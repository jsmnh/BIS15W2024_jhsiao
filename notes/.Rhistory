mutate(expenditure = rownames(USPersonalExpenditure))
expenditures
heartrate2 <- read_csv("data_midterm2/heartrate2.csv")
heartrate2
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_")
heartrate3 <- heartrate2 %>%
separate(patient, into=c("patient", "sex"), sep="_") %>%
pivot_longer(-c(patient, sex),
names_to = "drug",
values_to = "heartrate")
heartrate3
heartrate3 %>%
unite(patient_sex, "patient", "sex", sep=" ") #puts sexes back in name
tb_data <- read_csv("data_midterm2/tb_data.csv")
tb_data
tb_data_wide <- tb_data %>%
pivot_wider(names_from = "key", #the observations under key will become new columns
values_from = "value") #the values under value will be moved to the new columns
tb_data_wide
tb_data_long <- tb_data_wide %>%
pivot_longer(c(-country, - year),
names_to = "key",
values_to = "value")
tb_data_long
names(iris)
glimpse(iris)
ggplot(data=iris, #specify the data
mapping=aes(x=Species, y=Petal.Length)) #map the aesthetics
# species is a factor on x-axis
ggplot(data=iris, #specify the data
mapping=aes(x=Species, y=Petal.Length))+ #map the aesthetics
geom_boxplot() #add the plot type
homerange <- read_csv("data_midterm2/Tamburelloetal_HomeRangeDatabase.csv")
names(homerange)
ggplot(data=homerange, #specify the data
mapping=aes(x=log10.mass, y=log10.hra))+ #map the aesthetics
geom_point() #add the plot type
ggplot(data=homerange, mapping=aes(x=log10.mass, y=log10.hra))+
geom_jitter() #adds some random noise to separate the points a little
ggplot(data=homerange, mapping=aes(x=log10.mass, y=log10.hra))+
geom_point()+
geom_smooth(method=lm, se=T) #add a regression line (linear, standard error)
names(homerange)
homerange %>%
count(trophic.guild)
homerange %>%
ggplot(aes(x=trophic.guild)) + #only works with categorical data
geom_bar() #good for counts
homerange %>%
filter(family=="salmonidae") %>%
select(common.name, log10.mass) %>%
ggplot(aes(y=common.name, x=log10.mass))+ #notice the switch in x and y
geom_col()+
coord_flip() #flips the graph
homerange %>%
filter(family=="salmonidae") %>%
ggplot(aes(x=common.name, y=log10.mass))+
geom_bar(stat="identity") # need to specify this
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("skimr")
library("janitor")
library("palmerpenguins")
penguins %>%
group_by(island) %>%
summarize(mean_body_mass_g=mean(body_mass_g, na.rm=T)) # remember to remove those NA's!
penguins %>%
group_by(island, species) %>%
summarize(n_penguins=n(), .groups = 'keep')
penguins %>%
count(island, species)
penguins %>%
tabyl(island, species)  # tabyl is part of the janitor package
penguins %>%
summarize(across(contains("mm"), mean, na.rm=T))
penguins %>%
group_by(sex) %>%
summarize(across(contains("mm"), mean, na.rm=T))
penguins %>%
summarise_all(n_distinct)
penguins %>%
summarize(across(!c(species, island, sex, year),
mean, na.rm=T))
penguins %>%
summarise(across(starts_with("bill"), n_distinct))
library("tidyverse")
library("naniar")
library("skimr")
library("janitor")
life_history <- read_csv("data_midterm2/mammal_lifehistories_v3.csv") %>% clean_names()
glimpse(life_history)
summary(life_history)
life_history %>%
map_df(~ sum(is.na(.))) # It's telling you theres no NA because it read -999 as a number not NA
life_history_no_nas <-
read_csv(file = "data_midterm2/mammal_lifehistories_v3.csv", na = c("NA", " ", ".", "-999")) %>% clean_names() # notice that I am creating a new object/ dataframe that doesn't have any NA's
naniar::miss_var_summary(life_history_no_nas)
hist(life_history_no_nas$max_life) # we found another way NA's are represented
life_history_no_nas <-
life_history_no_nas %>%
mutate(max_life=na_if(max_life, 0))
miss_var_summary(life_history_no_nas)
life_history_no_nas %>%
group_by(order) %>%
select(order) %>%
miss_var_summary(order=T)
life_history %>% # going back to original data
replace_with_na(replace = list(newborn = "not measured",
weaning= -999,
wean_mass= -999,
afr= -999,
max_life= 0,
litter_size= -999,
gestation= -999,
mass= -999)) %>%
miss_var_summary()
# Makes replacement of NA's very specific
life_history %>% #going back to the original data
replace_with_na_all(condition = ~.x == -999)%>%
miss_var_summary()
common_na_strings
common_na_numbers
life_history %>% #going back to the original data
replace_with_na_all(condition = ~.x %in% c(common_na_strings, common_na_numbers)) %>%
mutate(newborn=na_if(newborn, "not measured"))
library(visdat)
vis_dat(life_history) #classes of data
vis_miss(life_history)
life_history_advance <-
readr::read_csv(file = "data_midterm2/mammal_lifehistories_v3.csv",
na = c("NA", " ", ".", "-999")) #all NA, blank spaces, .,and -999 are treated as NA
miss_var_summary(life_history_advance)
library(tidyverse)
heartrate <- read_csv("data_midterm2/heartrate.csv")
heartrate
heartrate %>%
pivot_longer(-patient, #patient will not move
names_to = "drug", #make a new column called "drug"
values_to="heartrate" #values moved to a new column called "heartrate"
)
billboard <- read_csv("data_midterm2/billboard.csv")
billboard
billboard2 <-
billboard %>%
pivot_longer(wk1:wk76, # a range of columns
names_to = "week",
values_to = "rank",
values_drop_na = TRUE #this will drop the NA's
)
billboard2
billboard3 <-
billboard %>%
pivot_longer(-c(artist, track, date.entered), #specific columns to stay fixed (by using c, meaning dont move these)
names_to = "week",
values_to = "rank",
values_drop_na = TRUE # this will drop the NA's
)
billboard3
billboard %>%
pivot_longer(
cols = starts_with("wk"), #columns that start with "wk"
names_to = "week",
names_prefix = "wk",
values_to = "rank",
values_drop_na = TRUE)
qpcr_untidy <- read_csv("data_midterm2/qpcr_untidy.csv")
qpcr_untidy
qpcr_untidy %>%
pivot_longer(
exp1_rep1:exp3_rep3,
names_to= c("experiment", "replicate"),
names_sep="_", #names seperate by underscore
values_to="mRNA_expression"
)
datasets::USPersonalExpenditure
?USPersonalExpenditure
expenditures <- USPersonalExpenditure %>%
as_tibble() %>% #this transforms the matrix into a data frame
mutate(expenditure = rownames(USPersonalExpenditure))
expenditures
heartrate2 <- read_csv("data_midterm2/heartrate2.csv")
heartrate2
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_")
heartrate3 <- heartrate2 %>%
separate(patient, into=c("patient", "sex"), sep="_") %>%
pivot_longer(-c(patient, sex),
names_to = "drug",
values_to = "heartrate")
heartrate3
heartrate3 %>%
unite(patient_sex, "patient", "sex", sep=" ") #puts sexes back in name
tb_data <- read_csv("data_midterm2/tb_data.csv")
tb_data
tb_data_wide <- tb_data %>%
pivot_wider(names_from = "key", #the observations under key will become new columns
values_from = "value") #the values under value will be moved to the new columns
tb_data_wide
tb_data_long <- tb_data_wide %>%
pivot_longer(c(-country, - year),
names_to = "key",
values_to = "value")
tb_data_long
names(iris)
glimpse(iris)
ggplot(data=iris, #specify the data
mapping=aes(x=Species, y=Petal.Length)) #map the aesthetics
# species is a factor on x-axis
ggplot(data=iris, #specify the data
mapping=aes(x=Species, y=Petal.Length))+ #map the aesthetics
geom_boxplot() #add the plot type
homerange <- read_csv("data_midterm2/Tamburelloetal_HomeRangeDatabase.csv")
names(homerange)
ggplot(data=homerange, #specify the data
mapping=aes(x=log10.mass, y=log10.hra))+ #map the aesthetics
geom_point() #add the plot type
ggplot(data=homerange, mapping=aes(x=log10.mass, y=log10.hra))+
geom_jitter() #adds some random noise to separate the points a little
ggplot(data=homerange, mapping=aes(x=log10.mass, y=log10.hra))+
geom_point()+
geom_smooth(method=lm, se=T) #add a regression line (linear, standard error)
names(homerange)
homerange %>%
count(trophic.guild)
homerange %>%
ggplot(aes(x=trophic.guild)) + #only works with categorical data
geom_bar() #good for counts
homerange %>%
filter(family=="salmonidae") %>%
select(common.name, log10.mass) %>%
ggplot(aes(y=common.name, x=log10.mass))+ #notice the switch in x and y
geom_col()+
coord_flip() #flips the graph
homerange %>%
filter(family=="salmonidae") %>%
ggplot(aes(x=common.name, y=log10.mass))+
geom_bar(stat="identity") # need to specify this
homerange %>%
group_by(class) %>%
summarize(min_log10.mass=min(log10.mass),
max_log10.mass=max(log10.mass),
median_log10.mass=median(log10.mass))
homerange %>%
ggplot(aes(x = class, y = log10.mass)) +
geom_boxplot()
life_history <- read_csv("data_midterm2/mammal_lifehistories_v2.csv", na="-999") %>% clean_names()
names(life_history)
life_history %>%
count(order, sort=T) %>%  # This is the same as arrange
ggplot(aes(x=order, y=n))+
geom_col()+
coord_flip()
life_history %>%
ggplot(aes(x=order))+
geom_bar()+
coord_flip()
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm=T)) %>%
ggplot(aes(x=order, y=mean_mass))+
geom_col()+
coord_flip()
options(scipen=999)#cancels scientific notation for the session
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm=T)) %>%
ggplot(aes(x=order, y=mean_mass))+
geom_col()+
coord_flip()+
scale_y_log10()
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm=T)) %>%
ggplot(aes(x=reorder(order, mean_mass), y=mean_mass))+ # This allows us to order the x-axis by mean_mass
geom_col()+
coord_flip()+
scale_y_log10()
life_history %>%
ggplot(aes(x=gestation, y=wean_mass))+
geom_jitter(na.rm = T)+ # prevents overplotting
scale_y_log10()
life_history %>%
ggplot(aes(x=order, y=mass))+
geom_boxplot(na.rm = T)+
coord_flip()+
scale_y_log10()
elephants <- read_csv("data_midterm2/elephantsMF.csv") %>% clean_names()
elephants %>%
ggplot(aes(x=age, y=height))+
geom_point()+
geom_smooth(method = lm, sex = F)
elephants %>%
ggplot(aes(x=age, y=height)) +
geom_point() +
geom_smooth(method=lm, se=F)+
labs(title="Elephant Age vs. Height", # adds a title
x="Age (years)",
y="Height (cm)")
elephants %>%
ggplot(aes(x=age, y=height)) +
geom_point() +
geom_smooth(method=lm, se=F)+ # se = standard error along with line
labs(title="Elephant Age vs. Height", # adds a title
x="Age (years)",
y="Height (cm)")+
theme(plot.title=element_text(size=rel(1.5), hjust = 0.5)) # rel = title relative to the plot, hjust = horizontal (left = 0, right = 1)
elephants %>%
ggplot(aes(x=sex, fill=sex))+ #fill is a grouping option
geom_bar()
life_history %>%
ggplot(aes(x=gestation, y=log10(mass), size=mass))+ # Made size relative to mass of thing plotted
geom_point(na.rm=T)
homerange <-
read_csv("data_midterm2/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
p <- homerange %>%
ggplot(aes(x= log10.mass, y= log10.hra)) # store base plot as object
p + geom_point(size=1.25)
p + geom_point(aes(color=thermoregulation), size=1.5) # For scatterplots, "color" is the same as "fill" in barplots
p + geom_point(aes(color=thermoregulation, shape=thermoregulation), size=1.5)
homerange %>% count(taxon, sort=T)
homerange %>%
ggplot(aes(x=taxon))+
geom_bar()+
coord_flip()+
labs(title="Observations by Taxon",
x="Taxonomic Group")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar()+
coord_flip()+
labs(title="Observations by Taxon",
x="Taxonomic Group")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(position="dodge")+
coord_flip()+
labs(title="Observations by Taxon",
x="Taxonomic Group")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(position="dodge")+
theme(axis.text.x=element_text(angle=60, hjust = 1))+ #change angle of x-axis observations
labs(title="Observations by Taxon",
x="Taxonomic Group")
homerange %>%
ggplot(aes(x = taxon, fill = trophic.guild))+
geom_bar(position = position_fill())+
scale_y_continuous(labels = scales::percent)+
coord_flip()
homerange %>%
ggplot(aes(x = class, y = log10.mass)) +
geom_boxplot()
homerange %>%
ggplot(aes(x = class, y = log10.mass, group = taxon)) +
geom_boxplot()
homerange %>%
ggplot(aes(x = class, y = log10.mass, fill = taxon)) +
geom_boxplot(alpha=0.5)
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
deserts <- read_csv("data_midterm2/surveys_complete.csv")
deserts %>%
filter(species_id=="DM" | species_id == "DS") %>%
mutate(year=as.factor(year)) %>%  # Change to factor bc R would think you're doing a numeric (addition etc.) but you dont add years
group_by(year, species_id) %>%
summarize(n=n(), .groups = 'keep') %>%
pivot_wider(names_from = species_id, values_from = n)
deserts %>%
filter(species_id=="DM" | species_id == "DS") %>%
mutate(year=as.factor(year)) %>% # If you remove this gaps would be big and treated as numeric
group_by(year, species_id) %>%
summarize(n=n(), .groups = 'keep') %>%
ggplot(aes(x=year, y=n, group=species_id, color = species_id))+
geom_line()+
geom_point(shape=2)+ # You can experiment with shapes
theme(axis.text.x=element_text(angle=60, hjust=1))+
labs(title="Number of Samples for Species DM & DS",
x = "Year",
y = "n")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(bins = 30)+ #we can adjust the number of bins with the bins argument
labs(title = "Distribution of Body Mass")
#grDevices::colors()
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(color = "black", fill = "powderblue", bins=10)+
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_density(fill="deepskyblue4", alpha  =0.4, color = "black")+ #alpha is the transparency
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x=log10.mass)) +
geom_histogram(aes(y = after_stat(density)), fill = "deepskyblue4", alpha = 0.4, color = "black")+
geom_density(color = "red")+
labs(title = "Distribution of Body Mass")
glimpse(homerange)
homerange %>%
select(log10.mass) %>%
summarize(min=min(log10.mass),
max=max(log10.mass))
summary(homerange$log10.mass)
homerange %>%
mutate(mass_category=case_when(log10.mass<=1.75 ~ "small",
log10.mass>1.75 & log10.mass <= 2.75 ~ "medium",
log10.mass>2.75 ~ "large"))
homerange %>%
mutate(mass_category=case_when(log10.mass<=1.75 ~ "small",
log10.mass>1.75 & log10.mass <= 2.75 ~ "medium",
log10.mass>2.75 ~ "large")) %>%
ggplot(aes(x=mass_category, fill=trophic.guild))+
geom_bar(position="dodge")
summary(homerange$log10.hra)
library(gtools)
#install.packages("gtools")
quartiles <- quantcut(homerange$log10.hra)
table(quartiles)
homerange %>%
mutate(range_category=case_when(log10.hra<3.65 ~ "very small",
log10.hra>=3.65 & log10.hra<=4.59 ~ "small",
log10.hra>=4.59 & log10.hra<=6.02 ~ "medium",
log10.hra>=6.02 ~ "large"))
homerange %>%
mutate(range_category=case_when(log10.hra<3.65 ~ "very small",
log10.hra>=3.65 & log10.hra<=4.59 ~ "small",
log10.hra>=4.59 & log10.hra<=6.02 ~ "medium",
log10.hra>=6.02 ~ "large")) %>%
ggplot(aes(x=range_category, fill=class))+
geom_bar(position = "dodge", alpha=0.6, color = "black")
homerange %>%
mutate(range_category=case_when(log10.hra<3.65 ~ "very small",
log10.hra>=3.65 & log10.hra<=4.59 ~ "small",
log10.hra>=4.59 & log10.hra<=6.02 ~ "medium",
log10.hra>=6.02 ~ "large")) %>%
filter(range_category=="small") %>%
ggplot(aes(x=class, y=log10.mass, fill=class))+
geom_boxplot()
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("janitor")
library("naniar")
surgery <- read_csv("data/surgery.csv")
surgery <- read_csv("data/surgery.csv")
surgery %>% count(race)
surgery %>%
ggplot(aes(x=race, fill=race))+
geom_bar(alpha=0.6, color="black")+
labs(title="Participants by Race",
x=NULL,
y="# participants")+
theme_light()
surgery %>%
filter(gender!="NA") %>%
group_by(gender) %>%
summarize(mean_age=mean(age, na.rm=T))
surgery %>%
filter(gender!="NA") %>%
ggplot(aes(x=gender, y=age, fill=gender))+
geom_boxplot(na.rm=T, alpha=0.6)+
labs(title="Range of Participants' Age by Gender",
x=NULL,
y="Age (years)")+
theme_light()
surgery %>%
filter(asa_status!="NA") %>%
ggplot(aes(x=asa_status, fill=asa_status))+
geom_bar(color="black", alpha=0.6)+
labs(title="ASA Status of Participants", x="ASA", y="# Participants")+
theme_light()
surgery %>%
ggplot(aes(x=bmi))+
geom_density(fill="steelblue", color="black", alpha=0.6, na.rm=T)+
facet_wrap(~asa_status)+
labs(title="Distribution of BMI", x="BMI", y=NULL)+
theme_light()
surgery %>%
group_by(ahrq_ccs) %>%
summarise(ccsmort30rate=mean(ccsmort30rate)) %>%
arrange(desc(ccsmort30rate)) %>%
slice_max(ccsmort30rate, n=5)
surgery %>%
group_by(ahrq_ccs) %>%
summarise(ccscomplicationrate=mean(ccscomplicationrate)) %>%
arrange(desc(ccscomplicationrate)) %>%
slice_max(ccscomplicationrate, n=5)
surgery %>%
ggplot(aes(x=ahrq_ccs, y=ccsmort30rate, group=ahrq_ccs))+
geom_col(position="dodge", fill="steelblue", alpha=0.6)+
coord_flip()+
labs(title="30-Day Mortality by Procedure",
x=NULL,
y="Rate")+
theme_light()
surgery_new <- surgery %>%
mutate(mort30_n = ifelse(mort30 == "Yes", 1, 0),
complication_n = ifelse(complication =="Yes", 1, 0)) %>%
group_by(month) %>%
summarise(n_deaths=sum(mort30_n),
n_comp=sum(complication_n))
surgery_new
surgery %>% tabyl(month, mort30)
surgery %>% tabyl(month, complication)
ls("package:ggthemes")[grepl("theme_", ls("package:ggthemes"))]
#install.packages("ggthemes")
library(ggthemes)
ls("package:ggthemes")[grepl("theme_", ls("package:ggthemes"))]
grDevices::colors()
